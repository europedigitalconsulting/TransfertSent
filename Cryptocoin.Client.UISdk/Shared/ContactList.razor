@namespace Cryptocoin.Client.Features.Transfer.Sent
<label class="col-lg-12" for="search-text">@ContactListPanelTitle</label>
<div class="input-group">

    <input class="form-control col-lg-12"  id="search-text" type="text" @bind="SearchTextTmp" @onfocus="SetFocus" @bind:event="oninput" />
    <div class="input-group-append">
        <button class="btn btn-primary" @onkeydown="@(() => { SetSelectedContact.InvokeAsync(null); Search(); })">@BtnSearch</button>
    </div>
</div>
<div class="form-group ">

    @if (Focus)
    {
        @*<p>@TxtSelectContact</p>*@
        <div class="list-group">
            @foreach (Contact item in ListContactTmp)
            {
                <button @onclick="@(() => { SetSelectedContact.InvokeAsync(item); ListContactTmp.Clear(); })" type="button" class="list-group-item list-group-item-action">
                    @item.DisplayName
                </button>
            }
        </div>
    }
</div>


@code {
    [Parameter]
    public string BtnSearch { get; set; }
    public bool Focus { get; set; } = false;
    [Parameter]
    public string TxtSelectContact { get; set; }
    [Parameter]
    public string ContactListPanelTitle { get; set; }
    [Parameter]
    public EventCallback<Contact> SetSelectedContact { get; set; }
    [Parameter]
    public IReadOnlyList<Contact> ListContact { get; set; } = new List<Contact>();

    protected List<Contact> ListContactTmp { get; set; }

    private string SearchText { get; set; }
    protected string SearchTextTmp
    {
        get
        {
            return SearchText;
        }
        set {
            SearchText = value;
            Search();
        }
    }

    protected override void OnInitialized()
    {
        ListContactTmp = ListContact.ToList();
        base.OnInitializedAsync();
    }

    protected void SetFocus()
    {
        Focus = true;
        StateHasChanged();
    }
    protected void Search()
    {
        if (!string.IsNullOrWhiteSpace(SearchText))
        {
            ListContactTmp = ListContact.Where(x => x.DisplayName.StartsWith(SearchText)).ToList();
        }
        else
            ListContactTmp = ListContact.ToList();
        StateHasChanged();
    }
}
